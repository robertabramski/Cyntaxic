package com.cyntaxic.cynmvc{	/**	 * <code>CyntaxicVO</code> is the base class for all value objects. 	 *  	 * @author robertabramski	 * 	 */	public dynamic class CyntaxicVO extends Object	{		/**		 * Creates a new instance of <code>CyntaxicVO</code>. For dynamic property 		 * appending, extend the class and use <code>super(data)</code> to pass the property object 		 * to the superclass for appending.		 *  		 * @param data A data object with properties to be appended by its subclass. 		 * 		 */		public function CyntaxicVO(data:Object = null)		{			if(data)			{				for(var prop:String in data)				{					this[prop] = data[prop];				}			}		}				/**		 * Returns a valid JSON string describing the object. Objects that can't be 		 * used in JSON like the Function object are returned as a string literal.		 *  		 * @param compact If false the string is not compacted.		 * @return A valid JSON string. 		 * 		 */		public function describe(compact:Boolean = true):String		{			return Cyntaxic.describe(this, compact);		}	}}